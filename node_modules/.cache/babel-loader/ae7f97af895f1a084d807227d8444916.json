{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/SuggestionPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuggestionPlaylist(_ref) {\n  _s();\n\n  let {\n    myMood,\n    onPlaylistSelection = () => {}\n  } = _ref;\n  const [moodPlaylistSelection, setMoodPlaylistSelection] = useState([]);\n  const [searchPlaylistSelection, setSearchPlaylistSelection] = useState([]);\n  useEffect(() => {\n    const myMoodPlaylist = moodPlaylist.find(object => object.mood === myMood);\n    fetch(myMoodPlaylist.url).then(response => response.json()).then(data => setMoodPlaylistSelection(data));\n  }, []);\n  useEffect(() => {\n    const mySearchPlaylist = searchPlaylist.find(object => object.mood === myMood);\n    fetch(mySearchPlaylist.url).then(response => response.json()).then(data => setSearchPlaylistSelection(data.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notre suggestion pour ton mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/my-playlist/deezeflow/${moodPlaylistSelection.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          onPlaylistSelection(moodPlaylistSelection.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: moodPlaylistSelection.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: moodPlaylistSelection.picture_medium,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), searchPlaylistSelection.slice(0, 5).map(index => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/my-playlist/search/${index.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          onPlaylistSelection(index.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: index.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: index.picture_small,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SuggestionPlaylist, \"VfG08h0oRssIyKDAQkDsk6xuadw=\");\n\n_c = SuggestionPlaylist;\nexport default SuggestionPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/SuggestionPlaylist.jsx"],"names":["useEffect","useState","Link","moodPlaylist","searchPlaylist","SuggestionPlaylist","myMood","onPlaylistSelection","moodPlaylistSelection","setMoodPlaylistSelection","searchPlaylistSelection","setSearchPlaylistSelection","myMoodPlaylist","find","object","mood","fetch","url","then","response","json","data","mySearchPlaylist","id","title","picture_medium","slice","map","index","picture_small"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;;;AAGA,SAASC,kBAAT,OAAuE;AAAA;;AAAA,MAA3C;AAACC,IAAAA,MAAD;AAASC,IAAAA,mBAAmB,GAAG,MAAM,CAAE;AAAvC,GAA2C;AAEtE,QAAM,CAAEC,qBAAF,EAAyBC,wBAAzB,IAAsDR,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAAES,uBAAF,EAA2BC,0BAA3B,IAA0DV,QAAQ,CAAC,EAAD,CAAxE;AAGAD,EAAAA,SAAS,CACR,MAAM;AACL,UAAMY,cAAc,GAAGT,YAAY,CAACU,IAAb,CAAmBC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBT,MAA9C,CAAvB;AACAU,IAAAA,KAAK,CAACJ,cAAc,CAACK,GAAhB,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUZ,wBAAwB,CAACY,IAAD,CAFxC;AAGA,GANO,EAOR,EAPQ,CAAT;AAUCrB,EAAAA,SAAS,CACR,MAAM;AACL,UAAMsB,gBAAgB,GAAGlB,cAAc,CAACS,IAAf,CACxBC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBT,MADH,CAAzB;AAGAU,IAAAA,KAAK,CAACM,gBAAgB,CAACL,GAAlB,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUV,0BAA0B,CAACU,IAAI,CAACA,IAAN,CAF1C;AAGD,GARQ,EAST,EATS,CAAT;AAYD,sBACC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEC,QAAC,IAAD;AAAM,MAAA,EAAE,EAAK,0BAAyBb,qBAAqB,CAACe,EAAG,EAA/D;AAAA,6BACG;AAAK,QAAA,OAAO,EAAE,MAAI;AAAChB,UAAAA,mBAAmB,CAACC,qBAAqB,CAACe,EAAvB,CAAnB;AAA8C,SAAjE;AAAA,gCACF;AAAA,oBAAIf,qBAAqB,CAACgB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF;AAAK,UAAA,GAAG,EAAEhB,qBAAqB,CAACiB,cAAhC;AAAgD,UAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFD,EASEf,uBAAuB,CAACgB,KAAxB,CAA8B,CAA9B,EAAgC,CAAhC,EAAmCC,GAAnC,CAAwCC,KAAD,iBACvC,QAAC,IAAD;AAAM,MAAA,EAAE,EAAK,uBAAsBA,KAAK,CAACL,EAAG,EAA5C;AAAA,6BACI;AAAK,QAAA,OAAO,EAAE,MAAI;AAAChB,UAAAA,mBAAmB,CAACqB,KAAK,CAACL,EAAP,CAAnB;AAA8B,SAAjD;AAAA,gCACH;AAAA,oBAAIK,KAAK,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAK,UAAA,GAAG,EAAEI,KAAK,CAACC,aAAhB;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,CATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA;;GAjDQxB,kB;;KAAAA,kB;AAmDT,eAAeA,kBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link} from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\n\n\nfunction SuggestionPlaylist({myMood, onPlaylistSelection = () => {} }) {\n\t\n\tconst [ moodPlaylistSelection, setMoodPlaylistSelection ] = useState([]);\n\tconst [ searchPlaylistSelection, setSearchPlaylistSelection ] = useState([]);\n\t\n\t\n\tuseEffect(\n\t\t() => {\n\t\t\tconst myMoodPlaylist = moodPlaylist.find((object) => object.mood === myMood);\n\t\t\tfetch(myMoodPlaylist.url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setMoodPlaylistSelection(data));\n\t\t},\n\t\t[ ]\n\t\t);\n\t\t\n\t\tuseEffect(\n\t\t\t() => {\n\t\t\t\tconst mySearchPlaylist = searchPlaylist.find(\n\t\t\t\t(object) => object.mood === myMood\n\t\t\t\t\t);\n\t\t\t\tfetch(mySearchPlaylist.url)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => setSearchPlaylistSelection(data.data));\n\t\t},\n\t\t[ ]\n\t);\n\n\treturn (\n\t\t<div>\n      <h3>Notre suggestion pour ton mood</h3>\n\t\t\t<Link to = {`/my-playlist/deezeflow/${moodPlaylistSelection.id}`}>\n      <div onClick={()=>{onPlaylistSelection(moodPlaylistSelection.id)}}>\n\t\t\t\t<p>{moodPlaylistSelection.title}</p>\n\t\t\t\t<img src={moodPlaylistSelection.picture_medium} alt=\"cover\" />\n\t\t\t</div>\n      </Link>\n\n\t\t\t{searchPlaylistSelection.slice(0,5).map((index) => (\n\t\t\t\t<Link to = {`/my-playlist/search/${index.id}`}>\n        <div onClick={()=>{onPlaylistSelection(index.id)}}>\n\t\t\t\t\t<p>{index.title}</p>\n\t\t\t\t\t<img src={index.picture_small} alt=\"cover\" />\n\t\t\t\t</div>\n        </Link>\n\t\t\t))}\n\n\t\t</div>\n\t);\n}\n\nexport default SuggestionPlaylist;"]},"metadata":{},"sourceType":"module"}