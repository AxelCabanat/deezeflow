{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/Pages/Formulaire.jsx\",\n    _s = $RefreshSig$();\n\nimport questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Formulaire = () => {\n  _s();\n\n  const {\n    myMood,\n    setMymood,\n    step,\n    setStep,\n    resetStep\n  } = useContext(StartQuestionnaireContext);\n  useEffect(() => {\n    const elementScroll = document.querySelector('.question-screen');\n\n    if (!elementScroll) {\n      return;\n    }\n\n    setTimeout(() => elementScroll.scrollTop = 0, 0);\n\n    if (step === 4) {\n      setMymood(calculateScore());\n    }\n  }, [step]);\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  useEffect(() => {\n    shuffle(questionsData, true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!myMood && /*#__PURE__*/_jsxDEV(QuestionsComponent, {\n      questions: questionsData[step],\n      onAnswered: answer => {\n        addAnswer(answer);\n        nextStep();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), myMood && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SuggestionPlaylist, {\n        myMood: myMood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonReplay\",\n        onClick: () => {\n          resetMood();\n          resetStep();\n          shuffle(questionsData, true);\n          setMymood('');\n        },\n        children: \"Rejouer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Formulaire, \"gaJ0CQfVZbspwHx+J82Omyb0XMw=\");\n\n_c = Formulaire;\nexport default Formulaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/Pages/Formulaire.jsx"],"names":["questionsData","addAnswer","resetMood","calculateScore","QuestionsComponent","useState","useEffect","useContext","shuffle","SuggestionPlaylist","StartQuestionnaireContext","Formulaire","myMood","setMymood","step","setStep","resetStep","elementScroll","document","querySelector","setTimeout","scrollTop","nextStep","answer"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,cAA/B,QAAqD,uBAArD;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,yBAAP,MAAsC,mCAAtC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,MAAkDT,UAAU,CAChEG,yBADgE,CAAlE;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAtB;;AAEA,QAAI,CAACF,aAAL,EAAoB;AAClB;AACD;;AAEDG,IAAAA,UAAU,CAAC,MAAOH,aAAa,CAACI,SAAd,GAA0B,CAAlC,EAAsC,CAAtC,CAAV;;AAEA,QAAIP,IAAI,KAAK,CAAb,EAAgB;AACdD,MAAAA,SAAS,CAACV,cAAc,EAAf,CAAT;AACD;AACF,GAZQ,EAYN,CAACW,IAAD,CAZM,CAAT;;AAcA,WAASQ,QAAT,GAAoB;AAClBP,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAACR,aAAD,EAAgB,IAAhB,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,eACG,CAACY,MAAD,iBACC,QAAC,kBAAD;AACE,MAAA,SAAS,EAAEZ,aAAa,CAACc,IAAD,CAD1B;AAEE,MAAA,UAAU,EAAGS,MAAD,IAAY;AACtBtB,QAAAA,SAAS,CAACsB,MAAD,CAAT;AACAD,QAAAA,QAAQ;AACT;AALH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWGV,MAAM,iBACL;AAAA,8BACE,QAAC,kBAAD;AAAoB,QAAA,MAAM,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbV,UAAAA,SAAS;AACTc,UAAAA,SAAS;AACTR,UAAAA,OAAO,CAACR,aAAD,EAAgB,IAAhB,CAAP;AACAa,UAAAA,SAAS,CAAC,EAAD,CAAT;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBAZJ;AAAA,kBADF;AA+BD,CA1DD;;GAAMF,U;;KAAAA,U;AA4DN,eAAeA,UAAf","sourcesContent":["import questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\n\nconst Formulaire = () => {\n  const { myMood, setMymood, step, setStep, resetStep } = useContext(\n    StartQuestionnaireContext\n  );\n\n  useEffect(() => {\n    const elementScroll = document.querySelector('.question-screen');\n\n    if (!elementScroll) {\n      return;\n    }\n\n    setTimeout(() => (elementScroll.scrollTop = 0), 0);\n\n    if (step === 4) {\n      setMymood(calculateScore());\n    }\n  }, [step]);\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  useEffect(() => {\n    shuffle(questionsData, true);\n  }, []);\n\n  return (\n    <>\n      {!myMood && (\n        <QuestionsComponent\n          questions={questionsData[step]}\n          onAnswered={(answer) => {\n            addAnswer(answer);\n            nextStep();\n          }}\n        />\n      )}\n\n      {myMood && (\n        <>\n          <SuggestionPlaylist myMood={myMood} />\n\n          <button\n            className=\"buttonReplay\"\n            onClick={() => {\n              resetMood();\n              resetStep();\n              shuffle(questionsData, true);\n              setMymood('');\n            }}\n          >\n            Rejouer\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Formulaire;\n"]},"metadata":{},"sourceType":"module"}