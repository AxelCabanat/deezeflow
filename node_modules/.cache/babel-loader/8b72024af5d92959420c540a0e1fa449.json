{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/Pages/Formulaire.jsx\",\n    _s = $RefreshSig$();\n\nimport questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport { Link } from 'react-router-dom';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulaire = ({\n  onMoodChange = () => {}\n}) => {\n  _s();\n\n  const {\n    step,\n    setStep,\n    resetStep,\n    startQuestions,\n    getItStarted\n  } = useContext(StartQuestionnaireContext);\n  const [myMood, setMymood] = useState('');\n  useEffect(() => {\n    let score = calculateScore();\n    setMymood(score);\n  }, [step === questionsData.length]);\n  useEffect(() => {\n    const elementScroll = document.querySelector('.question-screen');\n\n    if (!elementScroll) {\n      return;\n    }\n\n    setTimeout(() => elementScroll.scrollTop = 0, 0);\n  }, [step]);\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !getItStarted || getItStarted && step !== questionsData.length ? /*#__PURE__*/_jsxDEV(QuestionsComponent, {\n      questions: questionsData[step],\n      onAnswered: answer => {\n        addAnswer(answer);\n        nextStep();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this) : getItStarted && step === questionsData.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"end-screen\",\n      children: [/*#__PURE__*/_jsxDEV(SuggestionPlaylist, {\n        myMood: myMood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetMood();\n          shuffle(questionsData, true);\n          startQuestions();\n          resetStep();\n        },\n        children: \"Rejouer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/suggests\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onMoodChange(myMood),\n          children: \"Voir mes suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Formulaire, \"4PgHjzVYgbIsY40Tv6/uqbtVsto=\");\n\n_c = Formulaire;\nexport default Formulaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/Pages/Formulaire.jsx"],"names":["questionsData","addAnswer","resetMood","calculateScore","QuestionsComponent","useState","useEffect","useContext","shuffle","Link","SuggestionPlaylist","StartQuestionnaireContext","Formulaire","onMoodChange","step","setStep","resetStep","startQuestions","getItStarted","myMood","setMymood","score","length","elementScroll","document","querySelector","setTimeout","scrollTop","nextStep","answer"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,cAA/B,QAAqD,uBAArD;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,yBAAP,MAAsC,mCAAtC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAY,GAAG,MAAM,CAAE;AAAzB,CAAD,KAAiC;AAAA;;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,cAA5B;AAA4CC,IAAAA;AAA5C,MAA6DX,UAAU,CAACI,yBAAD,CAA7E;AAEA,QAAM,CAAEQ,MAAF,EAAUC,SAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CACR,MAAM;AACL,QAAIe,KAAK,GAAGlB,cAAc,EAA1B;AACAiB,IAAAA,SAAS,CAACC,KAAD,CAAT;AACA,GAJO,EAKR,CAAEP,IAAI,KAAKd,aAAa,CAACsB,MAAzB,CALQ,CAAT;AAOAhB,EAAAA,SAAS,CACR,MAAM;AACL,UAAMiB,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAtB;;AACA,QAAI,CAACF,aAAL,EAAoB;AACnB;AACA;;AACDG,IAAAA,UAAU,CAAC,MAAOH,aAAa,CAACI,SAAd,GAA0B,CAAlC,EAAsC,CAAtC,CAAV;AACA,GAPO,EAQR,CAAEb,IAAF,CARQ,CAAT;;AAWA,WAASc,QAAT,GAAoB;AACnBb,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACA;;AAED,sBACC;AAAA,cACG,CAACI,YAAD,IAAkBA,YAAY,IAAIJ,IAAI,KAAKd,aAAa,CAACsB,MAA1D,gBACA,QAAC,kBAAD;AACC,MAAA,SAAS,EAAEtB,aAAa,CAACc,IAAD,CADzB;AAEC,MAAA,UAAU,EAAGe,MAAD,IAAY;AACvB5B,QAAAA,SAAS,CAAC4B,MAAD,CAAT;AACAD,QAAAA,QAAQ;AACR;AALF;AAAA;AAAA;AAAA;AAAA,YADA,GASAV,YAAY,IACZJ,IAAI,KAAKd,aAAa,CAACsB,MADvB,iBAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACC,QAAC,kBAAD;AAAoB,QAAA,MAAM,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,OAAO,EAAE,MAAM;AACdjB,UAAAA,SAAS;AACTM,UAAAA,OAAO,CAACR,aAAD,EAAgB,IAAhB,CAAP;AACAiB,UAAAA,cAAc;AACdD,UAAAA,SAAS;AACT,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAYC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,+BACC;AAAQ,UAAA,OAAO,EAAE,MAAMH,YAAY,CAACM,MAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAZH;AAAA;AAAA;AAAA;AAAA,UADD;AAiCA,CA3DD;;GAAMP,U;;KAAAA,U;AA6DN,eAAeA,UAAf","sourcesContent":["import questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport { Link } from 'react-router-dom';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\n\nconst Formulaire = ({ onMoodChange = () => {} }) => {\n\tconst { step, setStep, resetStep, startQuestions, getItStarted } = useContext(StartQuestionnaireContext);\n\n\tconst [ myMood, setMymood ] = useState('');\n\tuseEffect(\n\t\t() => {\n\t\t\tlet score = calculateScore();\n\t\t\tsetMymood(score);\n\t\t},\n\t\t[ step === questionsData.length ]\n\t);\n\tuseEffect(\n\t\t() => {\n\t\t\tconst elementScroll = document.querySelector('.question-screen');\n\t\t\tif (!elementScroll) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(() => (elementScroll.scrollTop = 0), 0);\n\t\t},\n\t\t[ step ]\n\t);\n\n\tfunction nextStep() {\n\t\tsetStep(step + 1);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{(!getItStarted || (getItStarted && step !== questionsData.length)) ? (\n\t\t\t\t<QuestionsComponent\n\t\t\t\t\tquestions={questionsData[step]}\n\t\t\t\t\tonAnswered={(answer) => {\n\t\t\t\t\t\taddAnswer(answer);\n\t\t\t\t\t\tnextStep();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\tgetItStarted &&\n\t\t\t\tstep === questionsData.length && (\n\t\t\t\t\t<div className=\"end-screen\">\n\t\t\t\t\t\t<SuggestionPlaylist myMood={myMood} />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tresetMood();\n\t\t\t\t\t\t\t\tshuffle(questionsData, true);\n\t\t\t\t\t\t\t\tstartQuestions();\n\t\t\t\t\t\t\t\tresetStep();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRejouer\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Link to=\"/suggests\">\n\t\t\t\t\t\t\t<button onClick={() => onMoodChange(myMood)}>Voir mes suggestions</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Formulaire;\n"]},"metadata":{},"sourceType":"module"}