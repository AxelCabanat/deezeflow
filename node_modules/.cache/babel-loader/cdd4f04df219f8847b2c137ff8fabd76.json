{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Player from './components/Player';\nimport Header from './components/header';\nimport Formulaire from './components/Pages/Formulaire';\nimport HomePage from './components/Pages/HomePage';\nimport SuggestionPlaylist from './components/SuggestionPlaylist';\nimport MyPlaylist from './components/MyPlaylist';\nimport './font.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [savedMood, setSavedMood] = useState('');\n  const [playlistID, setPlaylistId] = useState('');\n  const [currentTracklist, setCurrentTracklist] = useState();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/form\",\n          element: /*#__PURE__*/_jsxDEV(Formulaire, {\n            onMoodChange: mood => {\n              setSavedMood(mood);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/suggests\",\n          element: /*#__PURE__*/_jsxDEV(SuggestionPlaylist, {\n            myMood: savedMood,\n            onPlaylistSelection: id => setPlaylistId(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-playlist/:source/:id\",\n          element: /*#__PURE__*/_jsxDEV(MyPlaylist, {\n            myPlaylistId: playlistID,\n            onSendingForPlayer: tracklist => {\n              setCurrentTracklist(tracklist);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), currentTracklist && /*#__PURE__*/_jsxDEV(Player, {\n        className: \"player\",\n        tracks: currentTracklist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q6peR5jngNDUMWflIUJY1JJ9PeI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cab/deezflow/src/App.jsx"],"names":["BrowserRouter","Router","Route","Routes","Navbar","Player","Header","Formulaire","HomePage","SuggestionPlaylist","MyPlaylist","useState","App","savedMood","setSavedMood","playlistID","setPlaylistId","currentTracklist","setCurrentTracklist","mood","id","tracklist"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,EAAxD;AACA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,eACL,QAAC,UAAD;AACE,YAAA,YAAY,EAAGQ,IAAD,IAAU;AACtBL,cAAAA,YAAY,CAACK,IAAD,CAAZ;AACD;AAHH;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,OAAO,eACL,QAAC,kBAAD;AACE,YAAA,MAAM,EAAEN,SADV;AAEE,YAAA,mBAAmB,EAAGO,EAAD,IAAQJ,aAAa,CAACI,EAAD;AAF5C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAZF,eAqBE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,0BADP;AAEE,UAAA,OAAO,eACL,QAAC,UAAD;AACE,YAAA,YAAY,EAAEL,UADhB;AAEE,YAAA,kBAAkB,EAAGM,SAAD,IAAe;AACjCH,cAAAA,mBAAmB,CAACG,SAAD,CAAnB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAqCGJ,gBAAgB,iBACf,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,MAAM,EAAEA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAyCE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GAnDQL,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Player from './components/Player';\nimport Header from './components/header';\nimport Formulaire from './components/Pages/Formulaire';\nimport HomePage from './components/Pages/HomePage';\nimport SuggestionPlaylist from './components/SuggestionPlaylist';\nimport MyPlaylist from './components/MyPlaylist';\nimport './font.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [savedMood, setSavedMood] = useState('');\n  const [playlistID, setPlaylistId] = useState('');\n  const [currentTracklist, setCurrentTracklist] = useState();\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <Routes>\n          <Route exact path=\"/\" element={<HomePage />} />\n          <Route\n            path=\"/form\"\n            element={\n              <Formulaire\n                onMoodChange={(mood) => {\n                  setSavedMood(mood);\n                }}\n              />\n            }\n          />\n          <Route\n            path=\"/suggests\"\n            element={\n              <SuggestionPlaylist\n                myMood={savedMood}\n                onPlaylistSelection={(id) => setPlaylistId(id)}\n              />\n            }\n          />\n          <Route\n            path=\"/my-playlist/:source/:id\"\n            element={\n              <MyPlaylist\n                myPlaylistId={playlistID}\n                onSendingForPlayer={(tracklist) => {\n                  setCurrentTracklist(tracklist);\n                }}\n              />\n            }\n          />\n        </Routes>\n\n        {currentTracklist && (\n          <Player className=\"player\" tracks={currentTracklist} />\n        )}\n\n        <Navbar />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}