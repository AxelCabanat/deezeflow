{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/Player.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport '../player.css';\nimport album from '../assets/album.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction msToTime(s) {\n  let sec = parseInt(s, 10); // Pad to 2 or 3 digits, default is 2\n\n  function pad(n, z) {\n    const v = z || 2;\n    return `00${n}`.slice(-v);\n  }\n\n  const secs = sec % 60;\n  sec = (sec - secs) / 60;\n  const mins = sec % 60;\n  return `${pad(mins)}:${pad(secs)}`;\n}\n\nfunction Player(_ref) {\n  _s();\n\n  let {\n    tracks\n  } = _ref;\n  const audioElements = useRef([]);\n  const [currentPlayingTrack, setCurrentPlayingTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState('00:00');\n  const [isEnded, setIsEnded] = useState(false);\n  /**\n   * Retourne une référence vers l'élément DOM de la chanson\n   * en cours\n   */\n\n  function getCurrentAudioElement() {\n    return audioElements.current[currentPlayingTrack];\n  }\n\n  function onTimeUpdate() {\n    setCurrentTime(msToTime(getCurrentAudioElement().currentTime));\n  }\n\n  function pause() {\n    getCurrentAudioElement().pause();\n    setIsPlaying(false);\n  }\n\n  function stop() {\n    pause();\n    getCurrentAudioElement().currentTime = 0;\n  }\n  /**\n   * A la fin de la chanson change la musique\n   *\n   */\n\n\n  const onEnded = () => {\n    setIsEnded(true);\n  };\n\n  function getDuration() {\n    return getCurrentAudioElement() ? getCurrentAudioElement().duration : 0;\n  }\n\n  function play() {\n    getCurrentAudioElement().play();\n    setIsPlaying(true);\n  }\n\n  function changeTrack(direction) {\n    if (direction === -1 && currentPlayingTrack === 0 || direction === 1 && currentPlayingTrack === audioElements.current.length - 1) {\n      return;\n    }\n\n    setIsEnded(false);\n    setIsAutoPlaying(isPlaying);\n    stop();\n    setCurrentPlayingTrack(currentPlayingTrack + direction);\n  }\n\n  useEffect(() => {\n    getCurrentAudioElement().addEventListener('timeupdate', onTimeUpdate);\n    getCurrentAudioElement().addEventListener('ended', onEnded);\n\n    if (isAutoPlaying) {\n      play();\n    }\n  }, [currentPlayingTrack]);\n  useEffect(() => {\n    if (isEnded) {\n      changeTrack(1);\n    }\n  }, [isEnded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: album,\n          alt: \"Pochette de l'album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-track\",\n        children: \"Killing in the name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singer\",\n        children: \"Rage Against the Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blockPlayer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), tracks.map((track, i) => /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        ref: element => {\n          audioElements.current[i] = element;\n        },\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonPlayer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"prev\",\n          \"aria-label\": \"Previous\",\n          onClick: () => changeTrack(-1),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon-next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pause\",\n          onClick: pause,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon-pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play\",\n          onClick: play,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon-play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next\",\n          \"aria-label\": \"Next\",\n          onClick: () => changeTrack(1),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"icon-next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currentTime, \" / \", msToTime(getDuration())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"VqR3tXhRfGZzBiXKn1aNIG1HNfs=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/Player.jsx"],"names":["useState","useEffect","useRef","album","msToTime","s","sec","parseInt","pad","n","z","v","slice","secs","mins","Player","tracks","audioElements","currentPlayingTrack","setCurrentPlayingTrack","isPlaying","setIsPlaying","isAutoPlaying","setIsAutoPlaying","currentTime","setCurrentTime","isEnded","setIsEnded","getCurrentAudioElement","current","onTimeUpdate","pause","stop","onEnded","getDuration","duration","play","changeTrack","direction","length","addEventListener","map","track","i","element"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nimport '../player.css';\nimport album from '../assets/album.jpg';\n\nfunction msToTime(s) {\n  let sec = parseInt(s, 10);\n\n  // Pad to 2 or 3 digits, default is 2\n  function pad(n, z) {\n    const v = z || 2;\n    return `00${n}`.slice(-v);\n  }\n\n  const secs = sec % 60;\n  sec = (sec - secs) / 60;\n  const mins = sec % 60;\n\n  return `${pad(mins)}:${pad(secs)}`;\n}\n\nfunction Player({ tracks }) {\n  const audioElements = useRef([]);\n\n  const [currentPlayingTrack, setCurrentPlayingTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState('00:00');\n  const [isEnded, setIsEnded] = useState(false);\n\n  /**\n   * Retourne une référence vers l'élément DOM de la chanson\n   * en cours\n   */\n  function getCurrentAudioElement() {\n    return audioElements.current[currentPlayingTrack];\n  }\n\n  function onTimeUpdate() {\n    setCurrentTime(msToTime(getCurrentAudioElement().currentTime));\n  }\n\n  function pause() {\n    getCurrentAudioElement().pause();\n    setIsPlaying(false);\n  }\n\n  function stop() {\n    pause();\n    getCurrentAudioElement().currentTime = 0;\n  }\n\n  /**\n   * A la fin de la chanson change la musique\n   *\n   */\n  const onEnded = () => {\n    setIsEnded(true);\n  }\n\n  function getDuration() {\n    return getCurrentAudioElement() ? getCurrentAudioElement().duration : 0;\n  }\n\n  function play() {\n    getCurrentAudioElement().play();\n    setIsPlaying(true);\n  }\n\n  function changeTrack(direction) {\n    if (\n      (direction === -1 && currentPlayingTrack === 0) ||\n      (direction === 1 && currentPlayingTrack === audioElements.current.length - 1)\n    ) {\n      return;\n    }\n\n    setIsEnded(false);\n    setIsAutoPlaying(isPlaying);\n    stop();\n    setCurrentPlayingTrack(currentPlayingTrack + direction);\n  }\n\n  useEffect(() => {\n    getCurrentAudioElement().addEventListener('timeupdate', onTimeUpdate);\n    getCurrentAudioElement().addEventListener('ended', onEnded);\n\n    if (isAutoPlaying) {\n      play();\n    }\n  }, [currentPlayingTrack]);\n\n  useEffect(() => {\n    if (isEnded) {\n      changeTrack(1)\n    }\n  }, [isEnded])\n  \n  return (\n    <div className=\"player\">\n      <div className=\"playerBlock\">\n        <div>\n          <img src={album} alt=\"Pochette de l'album\" />\n        </div>\n        <p className=\"title-track\">Killing in the name</p>\n        <p className=\"singer\">Rage Against the Machine</p>\n      </div>\n      <div className=\"blockPlayer\">\n        <p className=\"title-track\" />\n        {tracks.map((track, i) => (\n          <audio\n            controls\n            ref={(element) => {\n              audioElements.current[i] = element;\n            }}\n          >\n            <source src={track} />\n          </audio>\n        ))}\n        <div className=\"buttonPlayer\">\n          <button\n            type=\"button\"\n            className=\"prev\"\n            aria-label=\"Previous\"\n            onClick={() => changeTrack(-1)}\n          >\n            <div>\n              <span class=\"icon-next\"></span>\n            </div>\n          </button>\n          {isPlaying ? (\n            <button className=\"pause\" onClick={pause}>\n              <div>\n                <span class=\"icon-pause\"></span>\n              </div>\n            </button>\n          ) : (\n            <button className=\"play\" onClick={play}>\n              <div>\n                <span class=\"icon-play\"></span>\n              </div>\n            </button>\n          )}\n\n          <button\n            type=\"button\"\n            className=\"next\"\n            aria-label=\"Next\"\n            onClick={() => changeTrack(1)}\n          >\n            <div>\n              <span class=\"icon-next\"></span>\n            </div>\n          </button>\n        </div>\n        <p>\n          {currentTime} / {msToTime(getDuration())}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}