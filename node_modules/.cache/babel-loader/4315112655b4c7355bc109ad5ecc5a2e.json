{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/Player.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport Slider from 'rc-slider';\nimport PlayerContext from '../Contexts/PlayerContext';\nimport 'rc-slider/assets/index.css';\nimport '../player.css';\n/**\n * Converti des secondes au format MM:SS\n *\n * @param {Number} seconds\n *\n * @returns String\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst secondsToMMSS = seconds => new Date(Math.round(seconds) * 1000).toISOString().substr(14, 5);\n\nfunction Player({\n  tracks\n}) {\n  _s();\n\n  const {\n    myColorTheme\n  } = useContext(ColorThemeContext);\n  /**\n   * Excécuté lorsque la valeur du slider change\n   * On met à jour le temps courant de la musique courante\n   */\n\n  function onSliderChange(time) {\n    currentTrackElm.current.currentTime = time;\n  }\n  /**\n   * Change l'apparence du lecteur\n   */\n\n\n  function triggerToggle() {\n    setIsDisplayOff(!isDisplayOff);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player ${!isDisplayOff ? 'isDisplayOff-checked' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => triggerToggle(),\n        className: \"icon-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentTrack.bigPicture,\n          alt: \"Pochette de l'album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"globalPlayer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titlePlayer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-track\",\n          children: currentTrack.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singer\",\n          children: currentTrack.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentTime,\n        max: currentTrack.duration,\n        onChange: onSliderChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blockTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: secondsToMMSS(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: secondsToMMSS(currentTrack.duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blockPlayer\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: el => currentTrackElm.current = el,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: currentTrack.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonPlayer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"prev\",\n            \"aria-label\": \"Previous\",\n            onClick: () => changeTrack(-1),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pause\",\n            onClick: pause,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `icon-pause ${myColorTheme ? `theme-${myColorTheme}-fill` : \"theme-default-fill\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"play\",\n            onClick: play,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `icon-play ${myColorTheme ? `theme-${myColorTheme}-fill` : \"theme-default-fill\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"next\",\n            \"aria-label\": \"Next\",\n            onClick: () => changeTrack(1),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"9zX6z0Js1szUNNL842OY7PRCyHU=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/Player.jsx"],"names":["useState","useEffect","useRef","useContext","ColorThemeContext","Slider","PlayerContext","secondsToMMSS","seconds","Date","Math","round","toISOString","substr","Player","tracks","myColorTheme","onSliderChange","time","currentTrackElm","current","currentTime","triggerToggle","setIsDisplayOff","isDisplayOff","currentTrack","bigPicture","title","artist","duration","el","src","changeTrack","isPlaying","pause","play"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useContext } from 'react';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport Slider from 'rc-slider';\nimport PlayerContext from '../Contexts/PlayerContext';\n\nimport 'rc-slider/assets/index.css';\nimport '../player.css';\n/**\n * Converti des secondes au format MM:SS\n *\n * @param {Number} seconds\n *\n * @returns String\n */\nconst secondsToMMSS = (seconds) =>\n  new Date(Math.round(seconds) * 1000).toISOString().substr(14, 5);\n\nfunction Player({ tracks }) {\n\n  const { myColorTheme } = useContext(ColorThemeContext);\n\n  /**\n   * Excécuté lorsque la valeur du slider change\n   * On met à jour le temps courant de la musique courante\n   */\n  function onSliderChange(time) {\n    currentTrackElm.current.currentTime = time;\n  }\n\n  /**\n   * Change l'apparence du lecteur\n   */\n  function triggerToggle() {\n    setIsDisplayOff(!isDisplayOff);\n  }\n\n  return (\n    <div className={`player ${!isDisplayOff ? 'isDisplayOff-checked' : ''}`}>\n      <div className=\"playerBlock\">\n        <span onClick={() => triggerToggle()} className=\"icon-arrow\"></span>\n\n        <div>\n          <img src={currentTrack.bigPicture} alt=\"Pochette de l'album\" />\n        </div>\n      </div>\n\n      <div className=\"globalPlayer\">\n        <div className=\"titlePlayer\">\n          <p className=\"title-track\">{currentTrack.title}</p>\n          <p className=\"singer\">{currentTrack.artist}</p>\n        </div>\n\n        <Slider\n          value={currentTime}\n          max={currentTrack.duration}\n          onChange={onSliderChange}\n        />\n\n        <div className=\"blockTime\">\n          <p>{secondsToMMSS(currentTime)}</p>\n          <p>{secondsToMMSS(currentTrack.duration)}</p>\n        </div>\n\n        <div className=\"blockPlayer\">\n          <audio ref={(el) => (currentTrackElm.current = el)}>\n            <source src={currentTrack.src} />\n          </audio>\n\n          <div className=\"buttonPlayer\">\n            <button\n              type=\"button\"\n              className=\"prev\"\n              aria-label=\"Previous\"\n              onClick={() => changeTrack(-1)}\n            >\n              <div>\n                <span className=\"icon-next\"></span>\n              </div>\n            </button>\n\n            {isPlaying ? (\n              <button className=\"pause\" onClick={pause}>\n                <div>\n                  <span className={`icon-pause ${myColorTheme? `theme-${myColorTheme}-fill`:\"theme-default-fill\"}`}></span>\n                </div>\n              </button>\n            ) : (\n              <button className=\"play\" onClick={play}>\n                <div>\n                  <span className={`icon-play ${myColorTheme? `theme-${myColorTheme}-fill`:\"theme-default-fill\"}`}></span>\n                </div>\n              </button>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"next\"\n              aria-label=\"Next\"\n              onClick={() => changeTrack(1)}\n            >\n              <div>\n                <span className=\"icon-next\"></span>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}