{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/MyPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPlaylist = _ref => {\n  _s();\n\n  let {\n    myPlaylistId,\n    onSendingForPlayer = () => {}\n  } = _ref;\n  const [myPlaylist, setMyPlaylist] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/playlist/${myPlaylistId}`).then(response => response.json()).then(data => setMyPlaylist(data.tracks.data));\n    console.log(myPlaylist);\n  }, []);\n  const [playerData, setPlayerData] = useState([]);\n  useEffect(() => {\n    myPlaylist.map(index => setPlayerData([...playerData, {\n      bigPicture: index.album.cover_big,\n      smallPicture: index.album.cover_small,\n      title: index.title,\n      artist: index.artist.name,\n      track: index.preview\n    }]));\n  }, [myPlaylist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSendingForPlayer(playerData);\n        console.log(playerData);\n      },\n      children: \"PLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myPlaylist.map(index => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: index.album.cover_small,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), \" \", index.title, \"-\", index.artist.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MyPlaylist, \"4v4BTbNGX0veQsCfugVj7sm45LE=\");\n\n_c = MyPlaylist;\nexport default MyPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/MyPlaylist.jsx"],"names":["useState","useEffect","MyPlaylist","myPlaylistId","onSendingForPlayer","myPlaylist","setMyPlaylist","fetch","then","response","json","data","tracks","console","log","playerData","setPlayerData","map","index","bigPicture","album","cover_big","smallPicture","cover_small","title","artist","name","track","preview"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,UAAU,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,kBAAkB,GAAG,MAAM,CAAE;AAA7C,GAAoD;AACvE,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,KAAK,CAAE,kCAAiCJ,YAAa,EAAhD,CAAL,CACEK,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,IAAD,IAAUL,aAAa,CAACK,IAAI,CAACC,MAAL,CAAYD,IAAb,CAF9B;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACA,GALQ,EAKN,EALM,CAAT;AAOA,QAAM,CAAEU,UAAF,EAAcC,aAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACAC,EAAAA,SAAS,CACR,MAAM;AACLI,IAAAA,UAAU,CAACY,GAAX,CAAgBC,KAAD,IACdF,aAAa,CACZ,CAAC,GAAID,UAAL,EAAiB;AAChBI,MAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYC,SADR;AAEhBC,MAAAA,YAAY,EAAEJ,KAAK,CAACE,KAAN,CAAYG,WAFV;AAGhBC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAHG;AAIhBC,MAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,CAAaC,IAJL;AAKhBC,MAAAA,KAAK,EAAET,KAAK,CAACU;AALG,KAAjB,CADY,CADd;AAaA,GAfO,EAgBR,CAAEvB,UAAF,CAhBQ,CAAT;AAkBA,sBACC;AAAA,4BACC;AACC,MAAA,OAAO,EAAE,MAAM;AACdD,QAAAA,kBAAkB,CAACW,UAAD,CAAlB;AACKF,QAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACL,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eASC;AAAA,gBACEV,UAAU,CAACY,GAAX,CAAgBC,KAAD,iBACf;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACE,KAAN,CAAYG,WAAtB;AAAmC,UAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADD,OACoDL,KAAK,CAACM,KAD1D,OAEEN,KAAK,CAACO,MAAN,CAAaC,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CAhDD;;GAAMxB,U;;KAAAA,U;AAkDN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst MyPlaylist = ({ myPlaylistId, onSendingForPlayer = () => {} }) => {\n\tconst [ myPlaylist, setMyPlaylist ] = useState([]);\n\tuseEffect(() => {\n\t\tfetch(`http://localhost:3001/playlist/${myPlaylistId}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setMyPlaylist(data.tracks.data));\n\t\tconsole.log(myPlaylist);\n\t}, []);\n\n\tconst [ playerData, setPlayerData ] = useState([]);\n\tuseEffect(\n\t\t() => {\n\t\t\tmyPlaylist.map((index) =>\n\t\t\t\tsetPlayerData(\n\t\t\t\t\t[... playerData, {\n\t\t\t\t\t\tbigPicture: index.album.cover_big,\n\t\t\t\t\t\tsmallPicture: index.album.cover_small,\n\t\t\t\t\t\ttitle: index.title,\n\t\t\t\t\t\tartist: index.artist.name,\n\t\t\t\t\t\ttrack: index.preview\n          }]\n\n\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ myPlaylist ]\n\t);\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonSendingForPlayer(playerData);\n          console.log(playerData)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tPLAY\n\t\t\t</button>\n\t\t\t<ul>\n\t\t\t\t{myPlaylist.map((index) => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<img src={index.album.cover_small} alt=\"cover\" /> {index.title}-\n\t\t\t\t\t\t{index.artist.name}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default MyPlaylist;\n"]},"metadata":{},"sourceType":"module"}