{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/MyPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./MyPlaylist.css\";\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport PlayerContext from '../Contexts/PlayerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPlaylist = () => {\n  _s();\n\n  const {\n    setTracks,\n    setCurrentTrack\n  } = useContext(PlayerContext);\n  const {\n    myColorTheme\n  } = useContext(ColorThemeContext);\n  const {\n    id\n  } = useParams();\n  const [myPlaylist, setMyPlaylist] = useState([]);\n  const [myPlaylistCover, setMyPlaylistCover] = useState('');\n\n  function onPlayPlaylist() {\n    setTracks(myPlaylist);\n  }\n\n  function onPlayTrack(track) {\n    onPlayPlaylist();\n    setCurrentTrack(track);\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DEEZFLOW_API}/deezer/playlist/${id || myPlaylistId}`).then(response => response.json()).then(data => {\n      if (data.error) {\n        return setMyPlaylist([]);\n      }\n\n      setMyPlaylistCover(data['picture_medium']);\n      setMyPlaylist(data.tracks.data.map(track => ({\n        bigPicture: track.album.cover_big,\n        smallPicture: track.album.cover_small,\n        title: track.title,\n        artist: track.artist.name,\n        duration: 30,\n        src: track.preview\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-cover\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: myPlaylistCover,\n        alt: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonPlay\",\n      onClick: onPlayPlaylist,\n      children: \"PLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warpPlaylist\",\n      children: myPlaylist.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info-box active\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-track\",\n            children: track.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"singer\",\n            children: track.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play\",\n          onClick: () => onPlayTrack(track),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `icon-play ${myColorTheme ? `theme-${myColorTheme}-fill` : \"theme-default-fill\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyPlaylist, \"BUvgcbFYssJjcJM/ZXzBus/q0jI=\", false, function () {\n  return [useParams];\n});\n\n_c = MyPlaylist;\nexport default MyPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/MyPlaylist.jsx"],"names":["useState","useEffect","useContext","useParams","ColorThemeContext","PlayerContext","MyPlaylist","setTracks","setCurrentTrack","myColorTheme","id","myPlaylist","setMyPlaylist","myPlaylistCover","setMyPlaylistCover","onPlayPlaylist","onPlayTrack","track","fetch","process","env","REACT_APP_DEEZFLOW_API","myPlaylistId","then","response","json","data","error","tracks","map","bigPicture","album","cover_big","smallPicture","cover_small","title","artist","name","duration","src","preview"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./MyPlaylist.css\"\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport PlayerContext from '../Contexts/PlayerContext';\n\nconst MyPlaylist = () => {\n  const { setTracks, setCurrentTrack } = useContext(PlayerContext)\n  const { myColorTheme } = useContext(ColorThemeContext);\n\n  const { id } = useParams();\n  const [myPlaylist, setMyPlaylist] = useState([]);\n  const [myPlaylistCover, setMyPlaylistCover] = useState('');\n\n  function onPlayPlaylist() {\n    setTracks(myPlaylist);\n  }\n\n  function onPlayTrack(track) {\n    onPlayPlaylist();\n    setCurrentTrack(track);\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DEEZFLOW_API}/deezer/playlist/${id || myPlaylistId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          return setMyPlaylist([]);\n        }\n\n        setMyPlaylistCover(data['picture_medium']);\n\n        setMyPlaylist(\n          data.tracks.data.map((track) => ({\n            bigPicture: track.album.cover_big,\n            smallPicture: track.album.cover_small,\n            title: track.title,\n            artist: track.artist.name,\n            duration: 30,\n            src: track.preview,\n          }))\n        );\n      });\n  }, []);\n\n  return (\n    <div className=\"playlist-container\">\n      <div className=\"playlist-cover\">\n        <img src={myPlaylistCover} alt=\"cover\" />\n      </div>\n\n      <button\n        className=\"buttonPlay\"\n        onClick={onPlayPlaylist}\n      >\n        PLAY\n      </button>\n\n      <div className=\"warpPlaylist\">\n        {myPlaylist.map((track) => (\n          <div className=\"track-info-box active\">\n            <div className=\"track-info-text\">\n              <p className=\"title-track\">{track.title}</p>\n              <p className=\"singer\">{track.artist}</p>\n            </div>\n\n            <button className=\"play\" onClick={() => onPlayTrack(track)}>\n              <div>\n                <span className={`icon-play ${myColorTheme? `theme-${myColorTheme}-fill`:\"theme-default-fill\"}`}></span>\n              </div>\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPlaylist;\n"]},"metadata":{},"sourceType":"module"}