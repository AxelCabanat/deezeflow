{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/SuggestionPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\nimport './suggest.css';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport StartQuestionnaireContext from '../Contexts/StartQuestionnaire';\nimport { shuffle } from './Questions/AlgoQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuggestionPlaylist({\n  myMood,\n  setMyPlaylistId\n}) {\n  _s();\n\n  const {\n    myColorTheme,\n    setMyColorTheme\n  } = useContext(ColorThemeContext);\n  const {\n    setSavedMood\n  } = useContext(StartQuestionnaireContext);\n  const [moodPlaylistSelection, setMoodPlaylistSelection] = useState([]);\n  const [searchPlaylistSelection, setSearchPlaylistSelection] = useState([]);\n  useEffect(() => {\n    setMyColorTheme(myMood);\n    setSavedMood(myMood);\n  }, []);\n  useEffect(() => {\n    const myMoodPlaylist = moodPlaylist.find(object => object.mood === myMood);\n    fetch(myMoodPlaylist.url).then(response => response.json()).then(data => setMoodPlaylistSelection(data));\n  }, []);\n  useEffect(() => {\n    const mySearchPlaylist = searchPlaylist.find(object => object.mood === myMood);\n    fetch(mySearchPlaylist.url).then(response => response.json()).then(data => setSearchPlaylistSelection(data.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggest\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: ` ${myColorTheme ? `theme-${myColorTheme}-shadow` : 'theme-default-shadow'}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nous avons trouv\\xE9 un r\\xE9sultat :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/my-playlist/${moodPlaylistSelection.id}`,\n      onClick: () => setMyPlaylistId,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistMood\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: moodPlaylistSelection.picture_medium,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"D'autres suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestOther\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestOtherScroll\",\n        children: shuffle(searchPlaylistSelection).slice(0, 5).map(playlist => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/my-playlist/${playlist.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: playlist.picture_big,\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SuggestionPlaylist, \"NT0/JmR0/qNR3LPze6Y5JHXejeg=\");\n\n_c = SuggestionPlaylist;\nexport default SuggestionPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/SuggestionPlaylist.jsx"],"names":["useEffect","useState","useContext","Link","moodPlaylist","searchPlaylist","ColorThemeContext","StartQuestionnaireContext","shuffle","SuggestionPlaylist","myMood","setMyPlaylistId","myColorTheme","setMyColorTheme","setSavedMood","moodPlaylistSelection","setMoodPlaylistSelection","searchPlaylistSelection","setSearchPlaylistSelection","myMoodPlaylist","find","object","mood","fetch","url","then","response","json","data","mySearchPlaylist","id","picture_medium","slice","map","playlist","picture_big"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\n\nimport './suggest.css';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport StartQuestionnaireContext from '../Contexts/StartQuestionnaire';\nimport { shuffle } from './Questions/AlgoQuestion';\n\nfunction SuggestionPlaylist({ myMood, setMyPlaylistId }) {\n  const { myColorTheme, setMyColorTheme } = useContext(ColorThemeContext);\n  const { setSavedMood } = useContext(StartQuestionnaireContext);\n  const [moodPlaylistSelection, setMoodPlaylistSelection] = useState([]);\n  const [searchPlaylistSelection, setSearchPlaylistSelection] = useState([]);\n\n  useEffect(() => {\n    setMyColorTheme(myMood);\n    setSavedMood(myMood);\n  }, []);\n\n  useEffect(() => {\n    const myMoodPlaylist = moodPlaylist.find(\n      (object) => object.mood === myMood\n    );\n    fetch(myMoodPlaylist.url)\n      .then((response) => response.json())\n      .then((data) => setMoodPlaylistSelection(data));\n  }, []);\n\n  useEffect(() => {\n    const mySearchPlaylist = searchPlaylist.find(\n      (object) => object.mood === myMood\n    );\n    fetch(mySearchPlaylist.url)\n      .then((response) => response.json())\n      .then((data) => setSearchPlaylistSelection(data.data));\n  }, []);\n\n  return (\n    <div className=\"suggest\">\n      <h3\n        className={` ${\n          myColorTheme ? `theme-${myColorTheme}-shadow` : 'theme-default-shadow'\n        }`}\n      >\n        <span>Nous avons trouvé un résultat :</span>\n      </h3>\n\n      <Link to={`/my-playlist/${moodPlaylistSelection.id}`} onClick={()=>setMyPlaylistId}>\n        <div className=\"playlistMood\">\n          <img src={moodPlaylistSelection.picture_medium} alt=\"cover\" />\n        </div>\n      </Link>\n\n      <h2>D'autres suggestions</h2>\n\n      <div className=\"suggestOther\">\n        <div className=\"suggestOtherScroll\">\n          {shuffle(searchPlaylistSelection)\n            .slice(0, 5)\n            .map((playlist) => (\n              <Link key={playlist.id} to={`/my-playlist/${playlist.id}`}>\n                <img src={playlist.picture_big} alt=\"cover\" />\n              </Link>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SuggestionPlaylist;\n"]},"metadata":{},"sourceType":"module"}