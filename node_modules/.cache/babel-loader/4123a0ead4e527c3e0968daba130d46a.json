{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/SuggestionPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\nimport './suggest.css';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport StartQuestionnaireContext from '../Contexts/StartQuestionnaire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuggestionPlaylist({\n  myMood,\n  onPlaylistSelection = () => {}\n}) {\n  _s();\n\n  const {\n    myColorTheme,\n    setMyColorTheme\n  } = useContext(ColorThemeContext);\n  const {\n    setSavedMood\n  } = useContext(StartQuestionnaireContext);\n  const [moodPlaylistSelection, setMoodPlaylistSelection] = useState([]);\n  const [searchPlaylistSelection, setSearchPlaylistSelection] = useState([]);\n  useEffect(() => {\n    setMyColorTheme(myMood);\n    setSavedMood(myMood);\n  }, []);\n  useEffect(() => {\n    const myMoodPlaylist = moodPlaylist.find(object => object.mood === myMood);\n    console.log({\n      myMood\n    });\n    fetch(myMoodPlaylist.url).then(response => response.json()).then(data => setMoodPlaylistSelection(data));\n  }, []);\n  useEffect(() => {\n    const mySearchPlaylist = searchPlaylist.find(object => object.mood === myMood);\n    fetch(mySearchPlaylist.url).then(response => response.json()).then(data => setSearchPlaylistSelection(data.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggest\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: ` ${myColorTheme ? `theme-${myColorTheme}-shadow` : 'theme-default-shadow'}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Tu es dans un mood de \", myMood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/my-playlist/${moodPlaylistSelection.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistMood\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: moodPlaylistSelection.picture_medium,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"D'autre suggestion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestOther\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestOtherScroll\",\n        children: searchPlaylistSelection.slice(0, 5).map(index => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/my-playlist/${index.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: index.picture_big,\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SuggestionPlaylist, \"N8die5V6PWBHfH6W64fqOsxPumk=\");\n\n_c = SuggestionPlaylist;\nexport default SuggestionPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/SuggestionPlaylist.jsx"],"names":["useEffect","useState","useContext","Link","moodPlaylist","searchPlaylist","ColorThemeContext","StartQuestionnaireContext","SuggestionPlaylist","myMood","onPlaylistSelection","myColorTheme","setMyColorTheme","setSavedMood","moodPlaylistSelection","setMoodPlaylistSelection","searchPlaylistSelection","setSearchPlaylistSelection","myMoodPlaylist","find","object","mood","console","log","fetch","url","then","response","json","data","mySearchPlaylist","id","picture_medium","slice","map","index","picture_big"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { moodPlaylist, searchPlaylist } from './PlaylistsData';\n\nimport './suggest.css';\nimport ColorThemeContext from '../Contexts/ColorThemeContext';\nimport StartQuestionnaireContext from '../Contexts/StartQuestionnaire';\n\nfunction SuggestionPlaylist({ myMood, onPlaylistSelection = () => {} }) {\n\tconst { myColorTheme, setMyColorTheme } = useContext(ColorThemeContext);\n\tconst { setSavedMood} = useContext(StartQuestionnaireContext)\n\tconst [ moodPlaylistSelection, setMoodPlaylistSelection ] = useState([]);\n\tconst [ searchPlaylistSelection, setSearchPlaylistSelection ] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetMyColorTheme(myMood);\n\t\tsetSavedMood(myMood);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst myMoodPlaylist = moodPlaylist.find((object) => object.mood === myMood);\n\t\tconsole.log({myMood})\n\t\tfetch(myMoodPlaylist.url).then((response) => response.json()).then((data) => setMoodPlaylistSelection(data));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst mySearchPlaylist = searchPlaylist.find((object) => object.mood === myMood);\n\t\tfetch(mySearchPlaylist.url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setSearchPlaylistSelection(data.data));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"suggest\">\n\t\t\t<h3 className={` ${myColorTheme ? `theme-${myColorTheme}-shadow` : 'theme-default-shadow'}`}>\n\t\t\t\t<span>Tu es dans un mood de {myMood}</span>\n\t\t\t</h3>\n\n\t\t\t<Link to={`/my-playlist/${moodPlaylistSelection.id}`}>\n\t\t\t\t<div className=\"playlistMood\">\n\t\t\t\t\t<img src={moodPlaylistSelection.picture_medium} alt=\"cover\" />\n\t\t\t\t</div>\n\t\t\t</Link>\n\n\t\t\t<h2>D'autre suggestion</h2>\n\n\t\t\t<div className=\"suggestOther\">\n\t\t\t\t<div className=\"suggestOtherScroll\">\n\t\t\t\t\t{searchPlaylistSelection.slice(0, 5).map((index) => (\n\t\t\t\t\t\t<Link key={index} to={`/my-playlist/${index.id}`}>\n\t\t\t\t\t\t\t<img src={index.picture_big} alt=\"cover\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SuggestionPlaylist;\n"]},"metadata":{},"sourceType":"module"}