{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/Pages/Formulaire.jsx\",\n    _s = $RefreshSig$();\n\nimport questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulaire = () => {\n  _s();\n\n  const {\n    step,\n    setStep,\n    resetStep\n  } = useContext(StartQuestionnaireContext);\n  const [myMood, setMymood] = useState('');\n  useEffect(() => {\n    let score = calculateScore();\n    setMymood(score);\n  }, [step === 4]);\n  useEffect(() => {\n    const elementScroll = document.querySelector('.question-screen');\n\n    if (!elementScroll) {\n      return;\n    }\n\n    setTimeout(() => elementScroll.scrollTop = 0, 0);\n  }, [step]);\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  useContext(() => {\n    shuffle();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: step !== 4 ? /*#__PURE__*/_jsxDEV(QuestionsComponent, {\n      questions: questionsData[step],\n      onAnswered: answer => {\n        addAnswer(answer);\n        nextStep();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this) : step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"end-screen\",\n      children: [/*#__PURE__*/_jsxDEV(SuggestionPlaylist, {\n        myMood: myMood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetMood();\n          shuffle(questionsData, true);\n          resetStep();\n        },\n        children: \"Rejouer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Formulaire, \"kHVSkQ+aanDQFb7KS+RhBQzREyI=\");\n\n_c = Formulaire;\nexport default Formulaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/Pages/Formulaire.jsx"],"names":["questionsData","addAnswer","resetMood","calculateScore","QuestionsComponent","useState","useEffect","useContext","shuffle","SuggestionPlaylist","StartQuestionnaireContext","Formulaire","step","setStep","resetStep","myMood","setMymood","score","elementScroll","document","querySelector","setTimeout","scrollTop","nextStep","answer"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,cAA/B,QAAqD,uBAArD;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,yBAAP,MAAsC,mCAAtC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA+BP,UAAU,CAACG,yBAAD,CAA/C;AAEA,QAAM,CAAEK,MAAF,EAAUC,SAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CACR,MAAM;AACL,QAAIW,KAAK,GAAGd,cAAc,EAA1B;AACAa,IAAAA,SAAS,CAACC,KAAD,CAAT;AACA,GAJO,EAKR,CAAEL,IAAI,KAAK,CAAX,CALQ,CAAT;AAOAN,EAAAA,SAAS,CACR,MAAM;AACL,UAAMY,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAtB;;AACA,QAAI,CAACF,aAAL,EAAoB;AACnB;AACA;;AACDG,IAAAA,UAAU,CAAC,MAAOH,aAAa,CAACI,SAAd,GAA0B,CAAlC,EAAsC,CAAtC,CAAV;AACA,GAPO,EAQR,CAAEV,IAAF,CARQ,CAAT;;AAWA,WAASW,QAAT,GAAoB;AACnBV,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACA;;AAEDL,EAAAA,UAAU,CAAC,MAAI;AACdC,IAAAA,OAAO;AACP,GAFS,CAAV;AAIA,sBACC;AAAA,cACEI,IAAI,KAAK,CAAT,gBACA,QAAC,kBAAD;AACC,MAAA,SAAS,EAAEZ,aAAa,CAACY,IAAD,CADzB;AAEC,MAAA,UAAU,EAAGY,MAAD,IAAY;AACvBvB,QAAAA,SAAS,CAACuB,MAAD,CAAT;AACAD,QAAAA,QAAQ;AACR;AALF;AAAA;AAAA;AAAA;AAAA,YADA,GASAX,IAAI,KAAK,CAAT,iBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACC,QAAC,kBAAD;AAAoB,QAAA,MAAM,EAAEG;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,OAAO,EAAE,MAAM;AACdb,UAAAA,SAAS;AACTM,UAAAA,OAAO,CAACR,aAAD,EAAgB,IAAhB,CAAP;AACAc,UAAAA,SAAS;AACT,SALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXH;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CA1DD;;GAAMH,U;;KAAAA,U;AA4DN,eAAeA,UAAf","sourcesContent":["import questionsData from '../Questions/QuestionsData';\nimport { addAnswer, resetMood, calculateScore } from '../Questions/AlgoMood';\nimport QuestionsComponent from '../Questions/QuestionsComponent';\nimport './Formulaire.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { shuffle } from '../Questions/AlgoQuestion';\nimport SuggestionPlaylist from '../SuggestionPlaylist';\nimport StartQuestionnaireContext from '../../Contexts/StartQuestionnaire';\n\nconst Formulaire = () => {\n\tconst { step, setStep, resetStep } = useContext(StartQuestionnaireContext);\n\n\tconst [ myMood, setMymood ] = useState('');\n\tuseEffect(\n\t\t() => {\n\t\t\tlet score = calculateScore();\n\t\t\tsetMymood(score);\n\t\t},\n\t\t[ step === 4  ]\n\t);\n\tuseEffect(\n\t\t() => {\n\t\t\tconst elementScroll = document.querySelector('.question-screen');\n\t\t\tif (!elementScroll) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(() => (elementScroll.scrollTop = 0), 0);\n\t\t},\n\t\t[ step ]\n\t);\n\n\tfunction nextStep() {\n\t\tsetStep(step + 1);\n\t}\n\n\tuseContext(()=>{\n\t\tshuffle();\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t{step !== 4 ? (\n\t\t\t\t<QuestionsComponent\n\t\t\t\t\tquestions={questionsData[step]}\n\t\t\t\t\tonAnswered={(answer) => {\n\t\t\t\t\t\taddAnswer(answer);\n\t\t\t\t\t\tnextStep();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\tstep === 4 && (\n\t\t\t\t\t<div className=\"end-screen\">\n\t\t\t\t\t\t<SuggestionPlaylist myMood={myMood} />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tresetMood();\n\t\t\t\t\t\t\t\tshuffle(questionsData, true);\n\t\t\t\t\t\t\t\tresetStep();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRejouer\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Formulaire;\n"]},"metadata":{},"sourceType":"module"}