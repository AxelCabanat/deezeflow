{"ast":null,"code":"var _jsxFileName = \"/home/cab/deezflow/src/components/MyPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './MyPlaylist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPlaylist = _ref => {\n  _s();\n\n  let {\n    myPlaylistId,\n    onSendingForPlayer = () => {}\n  } = _ref;\n  const [myPlaylist, setMyPlaylist] = useState([]);\n  const [myPlaylistCover, setMyPlaylistCover] = useState('');\n  useEffect(() => {\n    fetch(`http://localhost:3001/playlist/${myPlaylistId}`).then(response => response.json()).then(data => {\n      setMyPlaylistCover(data['picture_medium']);\n      setMyPlaylist(data.tracks.data.map(track => ({\n        bigPicture: track.album.cover_big,\n        smallPicture: track.album.cover_small,\n        title: track.title,\n        artist: track.artist.name,\n        track: track.preview\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"playlist-cover\",\n      src: myPlaylistCover,\n      alt: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSendingForPlayer(myPlaylist);\n      },\n      children: \"PLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myPlaylist.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.album.cover_small,\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: track.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: track.artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this);\n};\n\n_s(MyPlaylist, \"bd+xQiTrTBh3KxEqqK0Bub4wrkM=\");\n\n_c = MyPlaylist;\nexport default MyPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPlaylist\");","map":{"version":3,"sources":["/home/cab/deezflow/src/components/MyPlaylist.jsx"],"names":["useState","useEffect","MyPlaylist","myPlaylistId","onSendingForPlayer","myPlaylist","setMyPlaylist","myPlaylistCover","setMyPlaylistCover","fetch","then","response","json","data","tracks","map","track","bigPicture","album","cover_big","smallPicture","cover_small","title","artist","name","preview"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,kBAAP;;;AACA,MAAMC,UAAU,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,kBAAkB,GAAG,MAAM,CAAE;AAA7C,GAAoD;AACvE,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEO,eAAF,EAAmBC,kBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,KAAK,CAAE,kCAAiCN,YAAa,EAAhD,CAAL,CAAwDO,IAAxD,CAA8DC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAA3E,EAA4FF,IAA5F,CAAkGG,IAAD,IAAU;AAC1GL,MAAAA,kBAAkB,CAACK,IAAI,CAAC,gBAAD,CAAL,CAAlB;AACAP,MAAAA,aAAa,CACZO,IAAI,CAACC,MAAL,CAAYD,IAAZ,CAAiBE,GAAjB,CAAsBC,KAAD,KAAY;AAChCC,QAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYC,SADQ;AAEhCC,QAAAA,YAAY,EAAEJ,KAAK,CAACE,KAAN,CAAYG,WAFM;AAGhCC,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAHmB;AAIhCC,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,CAAaC,IAJW;AAKhCR,QAAAA,KAAK,EAAEA,KAAK,CAACS;AALmB,OAAZ,CAArB,CADY,CAAb;AASA,KAXD;AAYA,GAbQ,EAaN,EAbM,CAAT;AAgBC,sBACF;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAElB,eAArC;AAAsD,MAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AACC,MAAA,OAAO,EAAE,MAAM;AACdH,QAAAA,kBAAkB,CAACC,UAAD,CAAlB;AACA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eASG;AAAA,gBACEA,UAAU,CAACU,GAAX,CAAgBC,KAAD,iBACf;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACE,KAAN,CAAYG,WAAtB;AAAmC,UAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACC;AAAA,sBAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAKN,KAAK,CAACO,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAuBD,CA1CD;;GAAMtB,U;;KAAAA,U;AA4CN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './MyPlaylist.css';\nconst MyPlaylist = ({ myPlaylistId, onSendingForPlayer = () => {} }) => {\n\tconst [ myPlaylist, setMyPlaylist ] = useState([]);\n\tconst [ myPlaylistCover, setMyPlaylistCover ] = useState('');\n\tuseEffect(() => {\n\t\tfetch(`http://localhost:3001/playlist/${myPlaylistId}`).then((response) => response.json()).then((data) => {\n\t\t\tsetMyPlaylistCover(data['picture_medium']);\n\t\t\tsetMyPlaylist(\n\t\t\t\tdata.tracks.data.map((track) => ({\n\t\t\t\t\tbigPicture: track.album.cover_big,\n\t\t\t\t\tsmallPicture: track.album.cover_small,\n\t\t\t\t\ttitle: track.title,\n\t\t\t\t\tartist: track.artist.name,\n\t\t\t\t\ttrack: track.preview,\n\t\t\t\t}))\n\t\t\t)\n\t\t});\n\t}, []);\n\n\n  return (\n<div className=\"playlist-container\">\n\t\t\t<img className=\"playlist-cover\" src={myPlaylistCover} alt=\"cover\" />\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonSendingForPlayer(myPlaylist);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tPLAY\n\t\t\t</button>\n\t\t\t<div>\n\t\t\t\t{myPlaylist.map((track) => (\n\t\t\t\t\t<div className=\"track-info-box\">\n\t\t\t\t\t\t<img src={track.album.cover_small} alt=\"cover\" />\n\t\t\t\t\t\t<div className=\"track-info-text\">\n\t\t\t\t\t\t\t<h3>{track.title}</h3>\n\t\t\t\t\t\t\t<h3>{track.artist.name}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n  );\n};\n\nexport default MyPlaylist;\n"]},"metadata":{},"sourceType":"module"}